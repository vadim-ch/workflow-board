{"version":3,"sources":["store/actions/create-task.ts","utils/index.ts","store/actions/move-task.ts","store/reducers/domain/tasks/index.ts","store/actions/create-list.ts","store/reducers/domain/column/index.ts","store/reducers/domain/index.ts","view/components/button/index.tsx","store/reducers/index.ts","store/index.ts","store/middlewares/tasks-middleware/index.ts","store/reducers/domain/column/selectors.ts","view/components/table-wrapper/index.tsx","view/components/editor/index.tsx","view/components/task-creator/index.tsx","view/components/title/index.tsx","view/components/column-container/index.tsx","view/components/task-list/index.tsx","view/components/task/index.tsx","view/components/column/index.tsx","store/reducers/domain/tasks/selectors.ts","view/containers/board/index.tsx","view/components/header/index.tsx","view/components/wrapper/index.tsx","view/app.tsx","serviceWorker.ts","index.tsx","view/components/button/styles.module.css","view/components/task-creator/styles.module.css","view/components/wrapper/styles.module.css","view/components/table-wrapper/styles.module.css","view/components/editor/styles.module.css","view/components/title/styles.module.css","view/components/column-container/styles.module.css","view/components/task-list/styles.module.css","view/components/task/styles.module.css","view/containers/board/styles.module.css","view/components/header/styles.module.css"],"names":["CREATE_TASK","createTask","title","columnId","type","payload","uuidv4","require","normalizeById","arr","reduce","acc","item","id","MOVE_TASK","moveTask","columnFromId","columnToId","indexFrom","indexTo","initialState","byId","allIds","normalizeTasks","tasks","state","Object","keys","CREATE_COLUMN","createList","taskIdsOrder","normalizeColumns","columns","ButtonType","domainState","combineReducers","action","task","column","columnFrom","columnTo","splice","reducers","middlewares","store","next","createLogger","getColumnState","getColumnList","createSelector","columnState","map","BoardContainer","children","className","styles","boardContainer","Button","Standart","handler","onClick","undefined","classNames","button","simple","Simple","Editor","value","onChange","textarea","React","current","focus","editor","ref","event","target","placeholder","TaskCreator","editMode","setEditMode","text","setText","taskCreator","buttonList","Title","ColumnContainer","columnContainer","TaskList","this","props","innerRef","taskList","Task","index","draggableId","provided","draggableProps","dragHandleProps","Column","droppableId","droppableProps","key","getTasksByListId","taskId","Board","onDragEnd","result","destination","source","actions","board","connect","dispatch","bindActionCreators","Header","header","Wrapper","wrapper","content","createStore","compose","applyMiddleware","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.2ebf03ab.chunk.js","sourcesContent":["export const CREATE_TASK = 'create-task';\n\nexport type CreateTaskAction = {\n  type: typeof CREATE_TASK;\n  payload: {\n    id?: string;\n    title: string;\n    columnId: string;\n  }\n};\n\nexport const createTask = (title: string, columnId: string): CreateTaskAction => {\n  return {\n    type: CREATE_TASK,\n    payload: {\n      title,\n      columnId\n    }\n  };\n};\n","const uuidv4 = require('uuid/v4');\n\nexport const generateId = () => {\n  return uuidv4();\n};\n\nexport type NormalizedType<T> = {\n  [id: string]: T;\n}\n\nexport const normalizeById = <T>(arr: Array<T>): NormalizedType<T> => {\n  return arr.reduce((acc: any, item: any) => {\n    acc[item.id] = item;\n    return acc;\n  }, {});\n};\n","export const MOVE_TASK = 'move-task';\n\nexport type MoveTaskAction = {\n  type: typeof MOVE_TASK;\n  payload: {\n    id: string;\n    columnFromId: string,\n    columnToId: string,\n    indexFrom: number,\n    indexTo: number\n  }\n};\n\nexport const moveTask = (\n    id: string,\n    columnFromId: string,\n    columnToId: string,\n    indexFrom: number,\n    indexTo: number\n): MoveTaskAction => {\n  return {\n    type: MOVE_TASK,\n    payload: {\n      id,\n      columnFromId,\n      columnToId,\n      indexFrom,\n      indexTo\n    }\n  };\n};\n","import { CREATE_TASK, CreateTaskAction } from '../../../actions/create-task';\nimport { normalizeById } from '../../../../utils';\nimport { MOVE_TASK, MoveTaskAction } from '../../../actions/move-task';\n\n\nconst initialState = {\n  byId: {},\n  allIds: []\n};\n\nexport type TaskType = {\n  id: string;\n  title: string;\n  columnId: string;\n}\n\nexport interface TasksState {\n  byId: {[id: string]: TaskType},\n  allIds: Array<string>;\n}\n\nconst normalizeTasks = (tasks: Array<TaskType>, state: TasksState): TasksState => {\n  const byId = {\n    ...state.byId,\n    ...normalizeById(tasks)\n  };\n  return {\n    byId,\n    allIds: Object.keys(byId)\n  }\n};\n\nexport function tasks(\n    state: TasksState = initialState,\n    action: CreateTaskAction | MoveTaskAction\n): TasksState {\n  switch (action.type) {\n    case CREATE_TASK: {\n      return normalizeTasks([action.payload as TaskType], state);\n    }\n    case MOVE_TASK: {\n      const task = {\n        ...state.byId[action.payload.id],\n        columnId: action.payload.columnToId\n      };\n      return normalizeTasks([task], state);\n    }\n    default:\n      return state;\n  }\n}\n","export const CREATE_COLUMN = 'create-column';\n\nexport type CreateColumnAction = {\n  type: typeof CREATE_COLUMN;\n  payload: {\n\n  }\n};\n\nexport const createList = (): CreateColumnAction => {\n  return {\n    type: CREATE_COLUMN,\n    payload: {}\n  };\n};\n","import { CREATE_COLUMN, CreateColumnAction } from \"../../../actions/create-list\";\nimport { CREATE_TASK, CreateTaskAction } from '../../../actions/create-task';\nimport { normalizeById } from '../../../../utils';\nimport { MOVE_TASK, MoveTaskAction } from '../../../actions/move-task';\n\nconst initialState = {\n  byId: {\n    '0': {\n      id: '0',\n      title: 'To Do',\n      taskIdsOrder: []\n    },\n    '1': {\n      id: '1',\n      title: 'In Progres',\n      taskIdsOrder: []\n    },\n    '2': {\n      id: '2',\n      title: 'Done',\n      taskIdsOrder: []\n    }\n  },\n  allIds: ['0', '1', '2']\n};\n\nexport type ColumnType = {\n  id: string;\n  title: string;\n  taskIdsOrder: Array<string>;\n}\n\nexport interface ColumnState {\n  byId: {[id: string]: ColumnType},\n  allIds: Array<string>;\n}\n\nconst normalizeColumns = (columns: Array<ColumnType>, state: ColumnState): ColumnState => {\n  const byId = {\n    ...state.byId,\n    ...normalizeById(columns)\n  };\n  return {\n    byId,\n    allIds: Object.keys(byId)\n  }\n};\n\nexport function column(\n    state: ColumnState = initialState,\n    action: CreateColumnAction | CreateTaskAction | MoveTaskAction\n): ColumnState {\n  switch (action.type) {\n    case CREATE_COLUMN: {\n      return state;\n    }\n    case CREATE_TASK: {\n      const column = state.byId[action.payload.columnId];\n      return normalizeColumns([{\n        ...column,\n        taskIdsOrder: [...column.taskIdsOrder, action.payload.id as string]\n      }], state);\n    }\n    case MOVE_TASK: {\n      const { id, columnFromId, columnToId, indexFrom, indexTo } = action.payload;\n      const columnFrom = {...state.byId[columnFromId]};\n      const columnTo = {...state.byId[columnToId]};\n      columnFrom.taskIdsOrder.splice(indexFrom, 1);\n      columnTo.taskIdsOrder.splice(indexTo, 0, id);\n\n      return normalizeColumns([\n        columnFrom,\n        columnTo\n      ], state);\n    }\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport { TasksState, tasks } from './tasks';\nimport { ColumnState, column } from './column';\n\nexport interface DomainState {\n  tasks: TasksState;\n  column: ColumnState;\n}\n\nexport const domainState = combineReducers<DomainState>({\n  tasks,\n  column,\n});\n","import * as React from 'react';\nimport classNames from 'classnames/bind';\n\nimport styles from './styles.module.css';\n\nexport enum ButtonType {\n  Simple,\n  Standart\n}\n\ntype Props = {\n  type?: ButtonType;\n  handler: {() : void} | null;\n}\n\nexport const Button: React.FC<Props> = ({type = ButtonType.Standart, handler, children}) => {\n  return (\n      <button\n          type=\"button\"\n          onClick={handler ? handler: undefined}\n          className={classNames(\n              styles.button,\n              {[styles.simple]: type === ButtonType.Simple}\n          )}\n      >\n        {children}\n      </button>\n  );\n};\n","import { combineReducers } from 'redux';\nimport { DomainState, domainState } from './domain';\n// import { ApplicationState, applicationState } from './application';\n\nexport interface State {\n  domainState: DomainState;\n}\n\nexport const reducers = combineReducers<State>({\n  domainState\n});\n\n","import { createStore, applyMiddleware, Store, compose } from 'redux';\nimport { reducers, State } from './reducers';\nimport { createLogger } from 'redux-logger';\nimport { tasksMiddleware } from './middlewares/tasks-middleware';\n\nlet middlewares = [\n  tasksMiddleware,\n  createLogger()\n];\n\nexport const configureStore = (initialState?: object): Store<State> => {\n  return createStore(\n      reducers,\n      initialState,\n      compose(\n          applyMiddleware(...middlewares)\n      )\n  );\n};\n","import { CREATE_TASK, CreateTaskAction } from '../../actions/create-task';\nimport { generateId } from '../../../utils';\n\nexport const tasksMiddleware = (store: any) => (next: any) => (action: CreateTaskAction) => {\n  switch (action.type) {\n    case CREATE_TASK: {\n      action.payload['id'] = generateId();\n      return next(action);\n    }\n    default:\n      return next(action);\n  }\n};\n","import { createSelector } from 'reselect';\nimport { State } from '../../index';\nimport { ColumnState, ColumnType } from './index';\n\nexport const getColumnState = (state: State): ColumnState => state.domainState.column;\n\nexport const getColumnList = createSelector(\n    [getColumnState],\n    (columnState: ColumnState): Array<ColumnType> => {\n      return columnState.allIds.map(id => columnState.byId[id]);\n    }\n);\n","import * as React from 'react';\nimport styles from './styles.module.css';\n\nexport const BoardContainer: React.FC = ({children}) => {\n  return (\n      <div className={styles.boardContainer}>\n        {children}\n      </div>\n  );\n};\n","import * as React from 'react';\nimport styles from './styles.module.css';\n\ntype Props = {\n  value: string;\n  onChange: (text: string) => void;\n}\n\nexport const Editor: React.FC<Props> = ({value, onChange}) => {\n  const textarea = React.createRef<any>();\n  React.useEffect(() => {\n    textarea.current.focus();\n  });\n  return (\n      <div className={styles.editor}>\n        <textarea\n            ref={textarea}\n            value={value}\n            onChange={(event) => onChange(event.target.value)}\n            placeholder=\"Ввести заголовок\"\n        />\n      </div>\n  )\n};\n","import * as React from 'react';\nimport { Button, ButtonType } from '../button';\nimport { Editor } from '../editor';\n\nimport styles from './styles.module.css';\n\n\ntype Props = {\n  createTask: (text: string) => void\n}\n\nexport const TaskCreator: React.FC<Props> = ({createTask}) => {\n  const [editMode, setEditMode] = React.useState<boolean | null>(false);\n  const [text, setText] = React.useState<string>('');\n  const createHandler = () => {\n    createTask(text);\n    setText('');\n  };\n  return (\n      <div className={styles.taskCreator}>\n        {editMode ?\n            <div>\n              <Editor value={text} onChange={setText}/>\n              <div className={styles.buttonList}>\n                <Button handler={text !== '' ? createHandler : null}>Создать задачу</Button>\n                <Button handler={() => setEditMode(false)} type={ButtonType.Simple}>X</Button>\n              </div>\n            </div> :\n            <Button handler={() => setEditMode(true)} type={ButtonType.Simple}>Создать ещё одну задачу</Button>\n        }\n      </div>\n\n  );\n};\n\n","import * as React from 'react';\nimport styles from './styles.module.css';\n\nexport const Title: React.FC = ({children}) => {\n  return (\n      <div className={styles.title}>\n        {children}\n      </div>\n  );\n};\n","import * as React from 'react';\nimport styles from './styles.module.css';\n\nexport const ColumnContainer: React.FC = ({children}) => {\n  return (\n      <div className={styles.columnContainer}>\n        {children}\n      </div>\n  );\n};\n","import * as React from 'react';\nimport styles from './styles.module.css';\n\ntype Props = {\n  innerRef: any;\n}\n\nexport class TaskList extends React.PureComponent<Props, {}> {\n  public render(): JSX.Element {\n    const { innerRef, children } = this.props;\n    return (\n        <div\n            ref={innerRef}\n            className={styles.taskList}\n        >\n          {children}\n        </div>\n    );\n  }\n}\n","import * as React from 'react';\nimport styles from './styles.module.css';\nimport { Draggable } from 'react-beautiful-dnd';\nimport { TaskType } from '../../../store/reducers/domain/tasks';\n\ntype Props = {\n  task: TaskType;\n  index: number;\n}\n\nexport class Task extends React.PureComponent<Props, {}> {\n  public render(): JSX.Element {\n    const {task, index} = this.props;\n    return (\n        <Draggable draggableId={task.id} index={index}>\n          {(provided) => (\n              <div\n                  ref={provided.innerRef}\n                  {...provided.draggableProps}\n                  {...provided.dragHandleProps}\n                  className={styles.task}\n              >\n                {task.title}\n              </div>\n          )}\n        </Draggable>\n    );\n  }\n}\n","import * as React from 'react';\nimport { TaskCreator } from '../task-creator';\nimport { ColumnType } from '../../../store/reducers/domain/column';\nimport { TaskType } from '../../../store/reducers/domain/tasks';\nimport { createTask } from '../../../store/actions/create-task';\nimport { Title } from '../title';\nimport { ColumnContainer } from '../column-container';\nimport { Droppable } from 'react-beautiful-dnd';\nimport { TaskList } from '../task-list';\n\nimport { Task } from '../task';\n\ntype Props = {\n  column: ColumnType;\n  tasks: Array<TaskType>;\n  createTask: typeof createTask\n}\n\nexport const Column: React.FC<Props> = ({column, tasks, createTask}) => {\n  return (\n      <ColumnContainer>\n        <Title>{column.title}</Title>\n        <Droppable droppableId={column.id}>\n          {(provided) => (\n              <TaskList\n                  innerRef={provided.innerRef}\n                  {...provided.droppableProps}\n              >\n                {tasks ? tasks.map((task, index) => (\n                    <Task key={task.id} task={task} index={index}/>\n                )) : null}\n                {provided.placeholder}\n              </TaskList>\n          )}\n        </Droppable>\n        <TaskCreator createTask={(text) => createTask(text, column.id)}/>\n      </ColumnContainer>\n  );\n};\n","import { createSelector } from 'reselect';\nimport { State } from '../../index';\nimport { TasksState, TaskType } from './index';\nimport { getColumnState } from '../column/selectors';\nimport { ColumnState } from '../column';\n\nexport type TaskByListType = {[id: string]: Array<TaskType>};\n\nexport const getTasks = (state: State): TasksState => state.domainState.tasks;\n\nexport const getTasksByListId = createSelector(\n    [getTasks, getColumnState],\n    (tasks: TasksState, columnState: ColumnState): TaskByListType => {\n      return columnState.allIds.reduce((acc: any, columnId) => {\n        acc[columnId] = columnState.byId[columnId].taskIdsOrder.map(taskId => tasks.byId[taskId]);\n        return acc;\n      }, {})\n    }\n);\n","import * as React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { State } from '../../../store/reducers';\nimport { createTask } from '../../../store/actions/create-task';\nimport { createList } from '../../../store/actions/create-list';\nimport { getColumnList } from '../../../store/reducers/domain/column/selectors';\nimport { ColumnType } from '../../../store/reducers/domain/column';\nimport { BoardContainer } from '../../components/table-wrapper';\nimport { Column } from '../../components/column';\n\nimport styles from './styles.module.css';\nimport { getTasksByListId, TaskByListType } from '../../../store/reducers/domain/tasks/selectors';\nimport { moveTask } from '../../../store/actions/move-task';\nimport { DragDropContext } from 'react-beautiful-dnd';\n\ntype ActionsMap = {\n  createTask: typeof createTask;\n  createList: typeof createList;\n  moveTask: typeof moveTask;\n}\n\nexport interface IStateProps {\n  columns: Array<ColumnType>;\n  tasks: TaskByListType;\n}\n\nexport interface IDispatchProps {\n  actions: ActionsMap;\n}\n\ntype IPropsComponents = IStateProps & IDispatchProps;\n\nclass Board extends React.PureComponent<IPropsComponents, {}> {\n  public render(): JSX.Element {\n    const {columns, actions, tasks} = this.props;\n    return (\n        <div className={styles.board}>\n          <DragDropContext onDragEnd={this.onDragEnd}>\n            <BoardContainer>\n              {columns.map(column => (\n                  <Column\n                      key={column.id}\n                      column={column}\n                      tasks={tasks[column.id]}\n                      createTask={actions.createTask}\n                  />\n              ))}\n            </BoardContainer>\n          </DragDropContext>\n        </div>\n    );\n  }\n\n  private onDragEnd = (result: any) => {\n    const {destination, source, draggableId} = result;\n    const {actions} = this.props;\n\n    if (!destination) {\n      return;\n    }\n\n    if (destination.droppableId === source.droppableId &&\n        destination.index === source.index) {\n      return;\n    }\n    actions.moveTask(\n        draggableId,\n        source.droppableId,\n        destination.droppableId,\n        source.index,\n        destination.index\n    );\n  }\n}\n\nconst mapStateToProps = (state: State): IStateProps => {\n  return {\n    columns: getColumnList(state),\n    tasks: getTasksByListId(state)\n  };\n};\n\nconst mapDispatchToProps = (dispatch: any): IDispatchProps => ({\n  actions: bindActionCreators({\n    createTask,\n    createList,\n    moveTask\n  }, dispatch)\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Board);\n","import * as React from 'react';\nimport styles from './styles.module.css';\n\ntype Props = {\n  title: string;\n}\n\nexport const Header: React.FC<Props> = ({title}) => {\n  return (\n      <div className={styles.header}>\n        {title}\n      </div>\n  );\n};\n","import * as React from 'react';\nimport styles from './styles.module.css';\nimport { Header } from '../header';\n\nexport const Wrapper: React.FC = ({children}) => {\n  return (\n      <div className={styles.wrapper}>\n        <Header title='Workflow board like Trello'/>\n        <div className={styles.content}>\n          {children}\n        </div>\n      </div>\n  );\n};\n","import * as React from 'react';\nimport { Provider } from 'react-redux';\nimport { configureStore } from '../store';\nimport Board from './containers/board';\nimport { Wrapper } from './components/wrapper';\n\nconst store = configureStore();\n\nconst App: React.FC = () => {\n  return (\n      <Provider store={store}>\n        <Wrapper>\n          <Board/>\n        </Wrapper>\n      </Provider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './view/app';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"styles_button__2jqYr\",\"simple\":\"styles_simple__3S3Ri\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"taskCreator\":\"styles_taskCreator__33Y7O\",\"buttonList\":\"styles_buttonList__2otAx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"styles_wrapper__2PlQ_\",\"content\":\"styles_content__3bOlP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"boardContainer\":\"styles_boardContainer__3CLVm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"editor\":\"styles_editor__28zGq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"styles_title__1QHHr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"columnContainer\":\"styles_columnContainer__38_Pe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"taskList\":\"styles_taskList__WHpLl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"task\":\"styles_task__1ql_l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"board\":\"styles_board__2OHwJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"styles_header__2sZTT\"};"],"sourceRoot":""}